{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Care Sphere API Documentation",
    "description": "Description"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Roles",
      "description": "Roles List"
    },
    {
      "name": "Positions",
      "description": "Positions List"
    },
    {
      "name": "Users",
      "description": "Users List"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "description": "",
        "parameters": [
          {
            "name": "isActive",
            "in": "query",
            "description": "isActive values that need to be considered for filter",
            "required": false,
            "type": "boolean",
            "enum": [
              true,
              false
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/deleteAllRoles": {
      "delete": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/roles/{id}": {
      "put": {
        "tags": [
          "Roles"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v1/roles/{id}/archive": {
      "put": {
        "tags": [
          "Roles"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v1/roles/{id}/unarchive": {
      "put": {
        "tags": [
          "Roles"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v1/positions": {
      "get": {
        "tags": [
          "Positions"
        ],
        "description": "",
        "parameters": [
          {
            "name": "isActive",
            "in": "query",
            "description": "isActive values that need to be considered for filter",
            "required": false,
            "type": "boolean",
            "enum": [
              true,
              false
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Positions"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/Position"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/positions/roles/{id}": {
      "get": {
        "tags": [
          "Positions"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/deleteAllPositions": {
      "delete": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/positions/{id}": {
      "put": {
        "tags": [
          "Positions"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/Position"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v1/positions/{id}/archive": {
      "put": {
        "tags": [
          "Positions"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v1/positions/{id}/unarchive": {
      "put": {
        "tags": [
          "Positions"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/api/v1/user": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/deleteAllUsers": {
      "delete": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/auth/createPassword/{token}": {
      "put": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/auth/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "isActive",
            "in": "query",
            "description": "isActive values that need to be considered for filter",
            "required": false,
            "type": "boolean",
            "enum": [
              true,
              false
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Role": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "role-name"
        },
        "order": {
          "type": "number",
          "example": 0
        }
      }
    },
    "Position": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "position-name"
        },
        "code": {
          "type": "number",
          "example": 123
        },
        "isActive": {
          "type": "boolean",
          "example": true
        },
        "roleId": {
          "type": "string",
          "example": "66dafcc7985b4581b2716913"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "isStaff": {
          "type": "boolean",
          "example": false
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Smith"
        },
        "secondaryEmailAddress": {
          "type": "string",
          "example": "test@example.com"
        },
        "email": {
          "type": "string",
          "example": "aman.katal@lpinfotech.com"
        },
        "address": {
          "type": "object",
          "properties": {
            "streetAddress": {
              "type": "string",
              "example": "3189 Broadway W"
            },
            "province": {
              "type": "string",
              "example": "British Columbia"
            },
            "city": {
              "type": "string",
              "example": "Vancouver"
            },
            "postCode": {
              "type": "string",
              "example": "6K 2H2"
            },
            "country": {
              "type": "string",
              "example": "Canada"
            }
          }
        },
        "mobileNumber": {
          "type": "array",
          "example": [
            "(604) 738-5551"
          ],
          "items": {
            "type": "string"
          }
        },
        "isActive": {
          "type": "boolean",
          "example": true
        },
        "roleId": {
          "type": "string",
          "example": "66dafcc7985b4581b2716913"
        },
        "positionId": {
          "type": "array",
          "example": [
            "66dafcc7985b4581b2716913"
          ],
          "items": {
            "type": "string"
          }
        },
        "division": {
          "type": "string",
          "example": "test"
        },
        "divisionSupervisor": {
          "type": "string",
          "example": "supervisor"
        },
        "allergies": {
          "type": "string",
          "example": "Drug Allergy"
        },
        "doYouDrive": {
          "type": "boolean",
          "example": false
        },
        "driveParticipants": {
          "type": "boolean",
          "example": false
        },
        "dateOfBirth": {
          "type": "string",
          "example": ""
        },
        "employeeNumber": {
          "type": "string",
          "example": "123"
        },
        "payType": {
          "type": "string",
          "example": "Hourly"
        },
        "statusType": {
          "type": "string",
          "example": "Casual"
        },
        "wellnessDays": {
          "type": "string",
          "example": "3"
        },
        "vacationDays": {
          "type": "string",
          "example": "12"
        },
        "emergencyContacts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "David"
              },
              "phone": {
                "type": "string",
                "example": "988898989"
              },
              "relationship": {
                "type": "string",
                "example": "boyfriend"
              }
            }
          }
        },
        "startDate": {
          "type": "string",
          "example": ""
        },
        "isTerminate": {
          "type": "boolean",
          "example": false
        },
        "terminateDate": {
          "type": "string",
          "example": ""
        },
        "terminateNote": {
          "type": "string",
          "example": ""
        },
        "reasonForeLeave": {
          "type": "string",
          "example": ""
        },
        "returnDate": {
          "type": "string",
          "example": ""
        },
        "password": {
          "type": "string",
          "example": ""
        },
        "verified": {
          "type": "boolean",
          "example": false
        },
        "verifiedAt": {
          "type": "string",
          "example": ""
        }
      }
    }
  }
}